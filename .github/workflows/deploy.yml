name: Deploy to Server

on:
  push:
    branches:
      - main
env:
    app: test-elysiajs-no-docker
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
            bun-version: 1.1.17

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run build   
  
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Server
        uses: appleboy/scp-action@master
        with:
            host: ${{ secrets.SSH_SERVER_IP }}
            username: root
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            source: "dist"
            target: "~/deployments/${{ github.repository }}-${{ github.sha }}-${{ github.run_id }}"

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_SERVER_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/deployments
            ln -sfn ${{ github.repository }}-${{ github.sha }}-${{ github.run_id }} ${{ env.app }}
              
            # create a service file if it doesn't exist
                if [ ! -f /etc/systemd/system/${{ env.app }}.service ]; then
                echo "Creating service file..."
                cat <<EOT > /etc/systemd/system/${{ env.app }}.service
            [Unit]
            Description=${{ env.app }}

            [Service]
            ExecStart=/root/.bun/bin/bun run /root/deployments/${{ env.app }}/dist/index.js

            [Install]
            WantedBy=multi-user.target
            EOT
                echo "Service file created."
                systemctl daemon-reload
                systemctl start ${{ env.app }}.service
                systemctl enable ${{ env.app }}.service
            else
                echo "Service file already exists."
            fi

            sudo systemctl restart ${{ env.app }}.service
